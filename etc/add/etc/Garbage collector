Garbage Collector란

-동적으로 할당한 메모리 영역 중 사용하지 않는 영역을 탐지하여 해제하는 기능

 

이때 동적이란??

Stack과 Heap중에 Heap을 말한다.

heap : 모든 object타입의 상속받는 모든 데이터 , 힙 영역을 가리키는 참조변수가 stack에 해당

 

여기서 힙이랑 스택 간단히 설명하고 다음으로 넘어가자.

package Java;

public class super01 {
    public static void main(String[] args) {
    int num1 = 10;
    int num2 = 20;
    int sum = num1 + num2;
    String name = "안녕하세요";

        System.out.println(sum);
        System.out.println(name);
    }
}
 

여기서 스택과 힙을 나누면

스택 : num1, num2, sum , name

힙 : string : 안녕하세요

 

여기서 중요한 부분은 스택의 name과 힙 이다.

string은 객체여서 힙 영역에 저장되고 그 객체를 참조하는 name이 스택영역에 할당된다.

 

Garbage Collector 과정

1.스택의 영역에 있는 모든 변수를 스캔 -> 각각의 어떤 객체를 참조하는지 마킹한다.

 

2.그 마킹한 객체가 또 참조하고 있는 객체를 찾아서 마킹하고

 

3.마킹되지 않은 객체를 힙에서 제거한다.

 

*

1~2 과정 : Mark     

3 과정 : Sweap과정

그래서 Mark and Swep 이라고 함

 

Heap 

New Gener(Eden , survival0 , survival1 ) + Old Gener

 - Eden : 새로운 객체가 할당되는 공간

(여기서 에덴의 영역이 다 차면 Minor Gc(가비지)가 발생)

 

Minor에서 살아남은 객체가 Survial0로 할당

이것이 계속 반복하면 Survial0가 다 차게된다.

 

이것이 age값이 1 증가하여 survival1로 이동하고 survival0은 비워짐

 

survival1에서 다 차게되면 값이 증가하여 survival0로 옮겨진다.

 

이 방식을 계속 지속하다가 일정 age값이 되면 old Generation에 할당되고

이 Old Generation이 다 차면 Major 가비지 컬렉터가 발생한다. 

 

이러한 방식이 지속적으로 반복

 

 

** Garbage Collector 종류**

1.Serial GC

2.Parallel Gc

3.Concurrent Mark Sweep Gc

4.G1 Gc

 이러한 여러가지 가비지 컬렉터를 소개하고 싶지만 이해를 아직 다 하지 못했다. 

시간이 되면 정리를 하겠습니다.

 
