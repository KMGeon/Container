<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.GalleryMapper">


	<resultMap type="bookVO" id="bookMap">
		<!-- 기본키는 id로 해도 좋다 -->
		<id property="bookId" column="BOOK_ID" />
		<result property="title" column="TITLE" />
		<result property="category" column="CATEGORY" />
		<result property="price" column="PRICE" />
		<result property="insertDate" column="INSERT_DATE" />
		<result property="content" column="CONTENT" jdbcType="CLOB"
			javaType="java.lang.String" />
		<!-- 1:N관계 표현(book:attach) 1.BOOKVO에 ATTACHVO를 넣어준다. 2.bookvo에 attachvo가 
			있으서 collection으로 넣어준다. -->
		<collection property="attachVOList" resultMap="attachMap"></collection>
	</resultMap>
	<!-- 3.collection의 attachMap을 만들어준다. (여기서 mybatisAlias에서 attachVO가 있는지 확인을 
		한다.) -->
	<resultMap type="attachVO" id="attachMap">
		<result property="userNo" column="USER_NO" />
		<result property="seq" column="SEQ" />
		<result property="filename" column="FILENAME" />
		<result property="filesize" column="FILESIZE" />
		<result property="regdate" column="REGDATE" />
	</resultMap>

	<!-- 이미지 목록 -->
	<select id="list" parameterType="bookVO" resultMap="bookMap">
		SELECT
		A.USER_NO,A.SEQ,A.REGDATE,A.FILESIZE,A.FILENAME,
		B.TITLE,B.CATEGORY,B.PRICE,B.INSERT_DATE,B.INSERT_DATE,B.BOOK_ID
		FROM
		ATTACH A
		INNER JOIN BOOK B
		ON A.USER_NO = B.BOOK_ID
		WHERE
		B.BOOK_ID=#{bookId}
	</select>

	<select id="bookList" resultType="bookVO">
		SELECT BOOK_ID , TITLE ,
		CATEGORY , PRICE , INSERT_DATE , CONTENT
		FROM BOOK ORDER BY TITLE ASC
	</select>


	<!-- 변경된 사진 db에 반영 -->
	<update id="updateImg" parameterType="attachVO">
		UPDATE ATTACH
		SET FILENAME =#{filename}
		WHERE USER_NO = #{userNo} AND SEQ=#{seq}
	</update>
	
	<!-- 삭제  -->
	<delete id="deletePost" parameterType="attachVO">
		DELETE FROM ATTACH
		WHERE USER_NO = #{userNo} and SEQ=#{seq} 
	</delete>


</mapper>