<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : xml파일은 여러개일 수 있음. 
이를 구별하기 위한 식별 용도로 사용 -->
<mapper namespace="kr.or.ddit.mapper.BookMapper">
	
	<resultMap type="bookVO" id="bookMap">
		<result property="bookId" column="BOOK_ID" />
		<result property="title" column="TITLE" />
		<result property="category" column="CATEGORY" />
		<result property="price" column="PRICE" />
		<result property="insertDate" column="INSERT_DATE" />
		<result property="content" column="CONTENT"
			jdbcType="CLOB"	javaType="java.lang.String" />
	</resultMap>
	
	<!-- 도서 목록 -->
	<select id="list" resultType="bookVO">
		SELECT BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE
		FROM   BOOK
	</select>
	
	<!-- 도서 상세
		CONTENT 컬럼..
		CLOB 타입의 데이터를 MyBatis를 이용해 처리할 때는 resultMap 태그를 만들고
		타입을 지정해줘야 함. CLOB타입 -> String 매핑
		java database connectivity의 type : CLOB
		java type : java.lang.String 
	 -->
	<select id="detail" parameterType="int" resultMap="bookMap">
		SELECT BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE, CONTENT
		FROM   BOOK
		WHERE  BOOK_ID = #{bookId}
	</select>
	
	<!-- 도서 수정 -->
	<update id="updatePost" parameterType="bookVO">
		UPDATE BOOK
		   SET TITLE = #{title}
		    ,  CATEGORY = #{category}
		    ,  PRICE = #{price}
		    ,  CONTENT = #{content}
		    ,  INSERT_DATE = SYSDATE
		WHERE BOOK_ID = #{bookId}
	</update>
	
	<!-- 
	before : BookVO [bookId=0, title=7번방의 개똥이, category=영화, price=12000, insertDate=null]
	after : BookVO [bookId=13, title=7번방의 개똥이, category=영화, price=12000, insertDate=null]
	 -->
	<!-- 도서 입력 -->
	<insert id="insertPost" parameterType="bookVO">
		<selectKey order="BEFORE" keyProperty="bookId" resultType="int">
			SELECT NVL(MAX(BOOK_ID),0) + 1 FROM BOOK
		</selectKey>

		INSERT INTO BOOK (BOOK_ID,TITLE,CATEGORY,PRICE,INSERT_DATE,CONTENT) 
		VALUES (#{bookId},#{title},#{category},#{price},SYSDATE,#{content})
	</insert>
</mapper>










